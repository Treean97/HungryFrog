name: BuildTest
on:
  workflow_dispatch:

jobs:
  build:
    # self-hosted 러너 지정 (윈도우 머신에 설치한 러너라면 반드시 Windows 레이블 포함)
    runs-on: [self-hosted, Windows, X64]

    defaults:
      run:
        shell: powershell

    # Unity Personal 라이선스 인증에 필요한 시크릿
    env:
      UNITY_LICENSE:   ${{ secrets.UNITY_LICENSE }}
      UNITY_EMAIL:     ${{ secrets.UNITY_EMAIL }}
      UNITY_PASSWORD:  ${{ secrets.UNITY_PASSWORD }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache PackageCache
        uses: actions/cache@v4
        with:
          path: Library/PackageCache
          key: pkg-${{ runner.os }}-${{ hashFiles('Packages/packages-lock.json') }}

      - name: Clean before Unity Build
        # 윈도우 PowerShell 환경에서 Temp, build 폴더를 삭제
        shell: pwsh
        run: |
          if (Test-Path Temp) { Remove-Item -Recurse -Force Temp }
          if (Test-Path build) { Remove-Item -Recurse -Force build }

      - name: Unity Build (APK)
        uses: game-ci/unity-builder@v4
        with:
          targetPlatform: Android
          androidExportType: androidPackage
          androidKeystoreName:    user.keystore
          androidKeystoreBase64:  ${{ secrets.KEYSTORE_BASE64 }}
          androidKeystorePass:    ${{ secrets.KEYSTORE_PASSWORD }}
          androidKeyaliasName:    ${{ secrets.KEY_ALIAS }}
          androidKeyaliasPass:    ${{ secrets.KEY_PASSWORD }}

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-Android-apk
          path: build/Android/*.apk
