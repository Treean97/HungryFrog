name: UnityBuildAAB

on:
  workflow_dispatch:

permissions: write-all

jobs:
  buildForAndroid:
    name: Build Android AAB
    runs-on: ubuntu-latest

    steps:
      # 1) 소스 체크아웃
      - name: Check Out
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true

      # 2) Library 캐시
      - name: Cache Library
        uses: actions/cache@v4
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-

      # 3) Keystore 복호화
      - name: Decode keystore
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" \
            | base64 --decode > user.keystore

      # 4) Unity 빌드 (AAB + keystore 서명, 전체 로그 보기)
      - name: Unity Build
        uses: game-ci/unity-builder@v4
        with:
          targetPlatform: Android
          # ProjectVersion.txt 기반 자동 버전
          unityVersion: auto
          # 필요한 Android SDK 컴포넌트 명시
          androidComponents: |
            platform-tools,
            build-tools;33.0.0,
            platforms;android-33
          # 권한 문제 회피
          runAsHostUser: true
          # 커스텀 빌드 메서드
          buildMethod: BuildScript.BuildAndroid
          # keystore 서명 정보
          androidKeystoreName: user.keystore
          androidKeystorePass: ${{ secrets.KEYSTORE_PASSWORD }}
          androidKeyaliasName: ${{ secrets.KEY_ALIAS }}
          androidKeyaliasPass: ${{ secrets.KEY_PASSWORD }}
          # 전체 로그 출력
          customParameters: -logFile -
        env:
          UNITY_LICENSE:  ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL:    ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}

      # 5) 생성된 AAB 업로드
      - name: Upload AAB Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Build-AAB
          path: build/app.aab
